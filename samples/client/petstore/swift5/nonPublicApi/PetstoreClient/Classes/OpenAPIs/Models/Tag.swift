//
// Tag.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


internal struct Tag: Codable, Hashable {

    internal var id: Int64?
    internal var name: String?

    internal init(id: Int64? = nil, name: String? = nil) {
        self.id = id
        self.name = name
    }
    internal enum CodingKeys: String, CodingKey, CaseIterable {
        case id
        case name
    }

    // Encodable protocol methods

    internal func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(id, forKey: .id)
        try container.encodeIfPresent(name, forKey: .name)
    }

    // Decodable protocol methods

    internal init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        id = try container.decodeIfPresent(Int64.self, forKey: .id)
        name = try container.decodeIfPresent(String.self, forKey: .name)
    }
}

extension Tag: Hashable {
    internal static func == (lhs: Tag, rhs: Tag) -> Bool {
        lhs.id == rhs.id &&
        lhs.name == rhs.name
        
    }

    internal func hash(into hasher: inout Hasher) {
        hasher.combine(id?.hashValue)
        hasher.combine(name?.hashValue)
        
    }
}

