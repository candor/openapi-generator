//
// Client.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
import Vapor

public final class Client: Content, Hashable {

    public var client: String?

    public init(client: String? = nil) {
        self.client = client
    }
    public enum CodingKeys: String, CodingKey, CaseIterable {
        case client
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)

        try container.encodeIfPresent(client, forKey: .client)
    }

    // Decodable protocol methods

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)

        client = try container.decodeIfPresent(String.self, forKey: .client)
    }
}

extension Client: Hashable {
    public static func == (lhs: Client, rhs: Client) -> Bool {
        lhs.client == rhs.client
        
    }

    public func hash(into hasher: inout Hasher) {
        hasher.combine(client?.hashValue)
        
    }
}

